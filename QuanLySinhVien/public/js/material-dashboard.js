/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/material-dashboard.js":
/*!***************************************************!*\
  !*** ./resources/assets/js/material-dashboard.js ***!
  \***************************************************/
/***/ (() => {

eval("\n\n(function () {\n  var isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\n  if (isWindows) {\n    // if we are on windows OS we activate the perfectScrollbar function\n    if (document.getElementsByClassName('main-content')[0]) {\n      var mainpanel = document.querySelector('.main-content');\n      var ps = new PerfectScrollbar(mainpanel);\n    }\n    ;\n    if (document.getElementsByClassName('sidenav')[0]) {\n      var sidebar = document.querySelector('.sidenav');\n      var ps1 = new PerfectScrollbar(sidebar);\n    }\n    ;\n    if (document.getElementsByClassName('navbar-collapse')[0]) {\n      var fixedplugin = document.querySelector('.navbar-collapse');\n      var ps2 = new PerfectScrollbar(fixedplugin);\n    }\n    ;\n    if (document.getElementsByClassName('fixed-plugin')[0]) {\n      var fixedplugin = document.querySelector('.fixed-plugin');\n      var ps3 = new PerfectScrollbar(fixedplugin);\n    }\n    ;\n  }\n  ;\n})();\n\n// Verify navbar blur on scroll\nif (document.getElementById('navbarBlur')) {\n  navbarBlurOnScroll('navbarBlur');\n}\n\n// initialization of Tooltips\nvar tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\nvar tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n  return new bootstrap.Tooltip(tooltipTriggerEl);\n});\n\n// when input is focused add focused class for style\nfunction focused(el) {\n  if (el.parentElement.classList.contains('input-group')) {\n    el.parentElement.classList.add('focused');\n  }\n}\n\n// when input is focused remove focused class for style\nfunction defocused(el) {\n  if (el.parentElement.classList.contains('input-group')) {\n    el.parentElement.classList.remove('focused');\n  }\n}\n\n// helper for adding on all elements multiple attributes\nfunction setAttributes(el, options) {\n  Object.keys(options).forEach(function (attr) {\n    el.setAttribute(attr, options[attr]);\n  });\n}\n\n// adding on inputs attributes for calling the focused and defocused functions\nif (document.querySelectorAll('.input-group').length != 0) {\n  var allInputs = document.querySelectorAll('input.form-control');\n  allInputs.forEach(function (el) {\n    return setAttributes(el, {\n      \"onfocus\": \"focused(this)\",\n      \"onfocusout\": \"defocused(this)\"\n    });\n  });\n}\n\n// Fixed Plugin\n\nif (document.querySelector('.fixed-plugin')) {\n  var fixedPlugin = document.querySelector('.fixed-plugin');\n  var fixedPlugin = document.querySelector('.fixed-plugin');\n  var fixedPluginButton = document.querySelector('.fixed-plugin-button');\n  var fixedPluginButtonNav = document.querySelector('.fixed-plugin-button-nav');\n  var fixedPluginCard = document.querySelector('.fixed-plugin .card');\n  var fixedPluginCloseButton = document.querySelectorAll('.fixed-plugin-close-button');\n  var navbar = document.getElementById('navbarBlur');\n  var buttonNavbarFixed = document.getElementById('navbarFixed');\n  if (fixedPluginButton) {\n    fixedPluginButton.onclick = function () {\n      if (!fixedPlugin.classList.contains('show')) {\n        fixedPlugin.classList.add('show');\n      } else {\n        fixedPlugin.classList.remove('show');\n      }\n    };\n  }\n  if (fixedPluginButtonNav) {\n    fixedPluginButtonNav.onclick = function () {\n      if (!fixedPlugin.classList.contains('show')) {\n        fixedPlugin.classList.add('show');\n      } else {\n        fixedPlugin.classList.remove('show');\n      }\n    };\n  }\n  fixedPluginCloseButton.forEach(function (el) {\n    el.onclick = function () {\n      fixedPlugin.classList.remove('show');\n    };\n  });\n  document.querySelector('body').onclick = function (e) {\n    if (e.target != fixedPluginButton && e.target != fixedPluginButtonNav && e.target.closest('.fixed-plugin .card') != fixedPluginCard) {\n      fixedPlugin.classList.remove('show');\n    }\n  };\n  if (navbar) {\n    if (navbar.getAttribute('data-scroll') == 'true' && buttonNavbarFixed) {\n      buttonNavbarFixed.setAttribute(\"checked\", \"true\");\n    }\n  }\n}\n\n//Set Sidebar Color\nfunction sidebarColor(a) {\n  var parent = document.querySelector(\".nav-link.active\");\n  var color = a.getAttribute(\"data-color\");\n  if (parent.classList.contains('bg-gradient-primary')) {\n    parent.classList.remove('bg-gradient-primary');\n  }\n  if (parent.classList.contains('bg-gradient-dark')) {\n    parent.classList.remove('bg-gradient-dark');\n  }\n  if (parent.classList.contains('bg-gradient-info')) {\n    parent.classList.remove('bg-gradient-info');\n  }\n  if (parent.classList.contains('bg-gradient-success')) {\n    parent.classList.remove('bg-gradient-success');\n  }\n  if (parent.classList.contains('bg-gradient-warning')) {\n    parent.classList.remove('bg-gradient-warning');\n  }\n  if (parent.classList.contains('bg-gradient-danger')) {\n    parent.classList.remove('bg-gradient-danger');\n  }\n  parent.classList.add('bg-gradient-' + color);\n}\n\n// Set Sidebar Type\nfunction sidebarType(a) {\n  var parent = a.parentElement.children;\n  var color = a.getAttribute(\"data-class\");\n  var body = document.querySelector(\"body\");\n  var bodyWhite = document.querySelector(\"body:not(.dark-version)\");\n  var bodyDark = body.classList.contains('dark-version');\n  var colors = [];\n  for (var i = 0; i < parent.length; i++) {\n    parent[i].classList.remove('active');\n    colors.push(parent[i].getAttribute('data-class'));\n  }\n  if (!a.classList.contains('active')) {\n    a.classList.add('active');\n  } else {\n    a.classList.remove('active');\n  }\n  var sidebar = document.querySelector('.sidenav');\n  for (var i = 0; i < colors.length; i++) {\n    sidebar.classList.remove(colors[i]);\n  }\n  sidebar.classList.add(color);\n\n  // Remove text-white/text-dark classes\n  if (color == 'bg-transparent' || color == 'bg-white') {\n    var textWhites = document.querySelectorAll('.sidenav .text-white');\n    for (var _i = 0; _i < textWhites.length; _i++) {\n      textWhites[_i].classList.remove('text-white');\n      textWhites[_i].classList.add('text-dark');\n    }\n  } else {\n    var textDarks = document.querySelectorAll('.sidenav .text-dark');\n    for (var _i2 = 0; _i2 < textDarks.length; _i2++) {\n      textDarks[_i2].classList.add('text-white');\n      textDarks[_i2].classList.remove('text-dark');\n    }\n  }\n  if (color == 'bg-transparent' && bodyDark) {\n    var textDarks = document.querySelectorAll('.navbar-brand .text-dark');\n    for (var _i3 = 0; _i3 < textDarks.length; _i3++) {\n      textDarks[_i3].classList.add('text-white');\n      textDarks[_i3].classList.remove('text-dark');\n    }\n  }\n\n  // Remove logo-white/logo-dark\n\n  if ((color == 'bg-transparent' || color == 'bg-white') && bodyWhite) {\n    var navbarBrand = document.querySelector('.navbar-brand-img');\n    var navbarBrandImg = navbarBrand.src;\n    if (navbarBrandImg.includes('logo-ct.png')) {\n      var navbarBrandImgNew = navbarBrandImg.replace(\"logo-ct\", \"logo-ct-dark\");\n      navbarBrand.src = navbarBrandImgNew;\n    }\n  } else {\n    var navbarBrand = document.querySelector('.navbar-brand-img');\n    var navbarBrandImg = navbarBrand.src;\n    if (navbarBrandImg.includes('logo-ct-dark.png')) {\n      var navbarBrandImgNew = navbarBrandImg.replace(\"logo-ct-dark\", \"logo-ct\");\n      navbarBrand.src = navbarBrandImgNew;\n    }\n  }\n  if (color == 'bg-white' && bodyDark) {\n    var navbarBrand = document.querySelector('.navbar-brand-img');\n    var navbarBrandImg = navbarBrand.src;\n    if (navbarBrandImg.includes('logo-ct.png')) {\n      var navbarBrandImgNew = navbarBrandImg.replace(\"logo-ct\", \"logo-ct-dark\");\n      navbarBrand.src = navbarBrandImgNew;\n    }\n  }\n}\n\n// Set Navbar Fixed\nfunction navbarFixed(el) {\n  var classes = ['position-sticky', 'blur', 'shadow-blur', 'mt-4', 'left-auto', 'top-1', 'z-index-sticky'];\n  var navbar = document.getElementById('navbarBlur');\n  if (!el.getAttribute(\"checked\")) {\n    var _navbar$classList;\n    (_navbar$classList = navbar.classList).add.apply(_navbar$classList, classes);\n    navbar.setAttribute('navbar-scroll', 'true');\n    navbarBlurOnScroll('navbarBlur');\n    el.setAttribute(\"checked\", \"true\");\n  } else {\n    var _navbar$classList2;\n    (_navbar$classList2 = navbar.classList).remove.apply(_navbar$classList2, classes);\n    navbar.setAttribute('navbar-scroll', 'false');\n    navbarBlurOnScroll('navbarBlur');\n    el.removeAttribute(\"checked\");\n  }\n}\n;\n\n// Set Navbar Minimized\nfunction navbarMinimize(el) {\n  var sidenavShow = document.getElementsByClassName('g-sidenav-show')[0];\n  if (!el.getAttribute(\"checked\")) {\n    sidenavShow.classList.remove('g-sidenav-pinned');\n    sidenavShow.classList.add('g-sidenav-hidden');\n    el.setAttribute(\"checked\", \"true\");\n  } else {\n    sidenavShow.classList.remove('g-sidenav-hidden');\n    sidenavShow.classList.add('g-sidenav-pinned');\n    el.removeAttribute(\"checked\");\n  }\n}\n\n// Navbar blur on scroll\nfunction navbarBlurOnScroll(id) {\n  var navbar = document.getElementById(id);\n  var navbarScrollActive = navbar ? navbar.getAttribute(\"data-scroll\") : false;\n  var scrollDistance = 5;\n  var classes = ['blur', 'shadow-blur', 'left-auto'];\n  var toggleClasses = ['shadow-none'];\n  if (navbarScrollActive == 'true') {\n    window.onscroll = debounce(function () {\n      if (window.scrollY > scrollDistance) {\n        blurNavbar();\n      } else {\n        transparentNavbar();\n      }\n    }, 10);\n  } else {\n    window.onscroll = debounce(function () {\n      transparentNavbar();\n    }, 10);\n  }\n  var isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\n  if (isWindows) {\n    var content = document.querySelector('.main-content');\n    if (navbarScrollActive == 'true') {\n      content.addEventListener('ps-scroll-y', debounce(function () {\n        if (content.scrollTop > scrollDistance) {\n          blurNavbar();\n        } else {\n          transparentNavbar();\n        }\n      }, 10));\n    } else {\n      content.addEventListener('ps-scroll-y', debounce(function () {\n        transparentNavbar();\n      }, 10));\n    }\n  }\n  function blurNavbar() {\n    var _navbar$classList3, _navbar$classList4;\n    (_navbar$classList3 = navbar.classList).add.apply(_navbar$classList3, classes);\n    (_navbar$classList4 = navbar.classList).remove.apply(_navbar$classList4, toggleClasses);\n    toggleNavLinksColor('blur');\n  }\n  function transparentNavbar() {\n    var _navbar$classList5, _navbar$classList6;\n    (_navbar$classList5 = navbar.classList).remove.apply(_navbar$classList5, classes);\n    (_navbar$classList6 = navbar.classList).add.apply(_navbar$classList6, toggleClasses);\n    toggleNavLinksColor('transparent');\n  }\n  function toggleNavLinksColor(type) {\n    var navLinks = document.querySelectorAll('.navbar-main .nav-link');\n    var navLinksToggler = document.querySelectorAll('.navbar-main .sidenav-toggler-line');\n    if (type === \"blur\") {\n      navLinks.forEach(function (element) {\n        element.classList.remove('text-body');\n      });\n      navLinksToggler.forEach(function (element) {\n        element.classList.add('bg-dark');\n      });\n    } else if (type === \"transparent\") {\n      navLinks.forEach(function (element) {\n        element.classList.add('text-body');\n      });\n      navLinksToggler.forEach(function (element) {\n        element.classList.remove('bg-dark');\n      });\n    }\n  }\n}\n\n// Debounce Function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n;\n\n// initialization of Toasts\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var toastElList = [].slice.call(document.querySelectorAll(\".toast\"));\n  var toastList = toastElList.map(function (toastEl) {\n    return new bootstrap.Toast(toastEl);\n  });\n  var toastButtonList = [].slice.call(document.querySelectorAll(\".toast-btn\"));\n  toastButtonList.map(function (toastButtonEl) {\n    toastButtonEl.addEventListener(\"click\", function () {\n      var toastToTrigger = document.getElementById(toastButtonEl.dataset.target);\n      if (toastToTrigger) {\n        var toast = bootstrap.Toast.getInstance(toastToTrigger);\n        toast.show();\n      }\n    });\n  });\n});\n\n// Tabs navigation\n\nvar total = document.querySelectorAll('.nav-pills');\nfunction initNavs() {\n  total.forEach(function (item, i) {\n    var moving_div = document.createElement('div');\n    var first_li = item.querySelector('li:first-child .nav-link');\n    var tab = first_li.cloneNode();\n    tab.innerHTML = \"-\";\n    moving_div.classList.add('moving-tab', 'position-absolute', 'nav-link');\n    moving_div.appendChild(tab);\n    item.appendChild(moving_div);\n    var list_length = item.getElementsByTagName(\"li\").length;\n    moving_div.style.padding = '0px';\n    moving_div.style.width = item.querySelector('li:nth-child(1)').offsetWidth + 'px';\n    moving_div.style.transform = 'translate3d(0px, 0px, 0px)';\n    moving_div.style.transition = '.5s ease';\n    item.onmouseover = function (event) {\n      var target = getEventTarget(event);\n      var li = target.closest('li'); // get reference\n      if (li) {\n        var nodes = Array.from(li.closest('ul').children); // get array\n        var index = nodes.indexOf(li) + 1;\n        item.querySelector('li:nth-child(' + index + ') .nav-link').onclick = function () {\n          moving_div = item.querySelector('.moving-tab');\n          var sum = 0;\n          if (item.classList.contains('flex-column')) {\n            for (var j = 1; j <= nodes.indexOf(li); j++) {\n              sum += item.querySelector('li:nth-child(' + j + ')').offsetHeight;\n            }\n            moving_div.style.transform = 'translate3d(0px,' + sum + 'px, 0px)';\n            moving_div.style.height = item.querySelector('li:nth-child(' + j + ')').offsetHeight;\n          } else {\n            for (var j = 1; j <= nodes.indexOf(li); j++) {\n              sum += item.querySelector('li:nth-child(' + j + ')').offsetWidth;\n            }\n            moving_div.style.transform = 'translate3d(' + sum + 'px, 0px, 0px)';\n            moving_div.style.width = item.querySelector('li:nth-child(' + index + ')').offsetWidth + 'px';\n          }\n        };\n      }\n    };\n  });\n}\nsetTimeout(function () {\n  initNavs();\n}, 100);\n\n// Tabs navigation resize\n\nwindow.addEventListener('resize', function (event) {\n  total.forEach(function (item, i) {\n    item.querySelector('.moving-tab').remove();\n    var moving_div = document.createElement('div');\n    var tab = item.querySelector(\".nav-link.active\").cloneNode();\n    tab.innerHTML = \"-\";\n    moving_div.classList.add('moving-tab', 'position-absolute', 'nav-link');\n    moving_div.appendChild(tab);\n    item.appendChild(moving_div);\n    moving_div.style.padding = '0px';\n    moving_div.style.transition = '.5s ease';\n    var li = item.querySelector(\".nav-link.active\").parentElement;\n    if (li) {\n      var nodes = Array.from(li.closest('ul').children); // get array\n      var index = nodes.indexOf(li) + 1;\n      var sum = 0;\n      if (item.classList.contains('flex-column')) {\n        for (var j = 1; j <= nodes.indexOf(li); j++) {\n          sum += item.querySelector('li:nth-child(' + j + ')').offsetHeight;\n        }\n        moving_div.style.transform = 'translate3d(0px,' + sum + 'px, 0px)';\n        moving_div.style.width = item.querySelector('li:nth-child(' + index + ')').offsetWidth + 'px';\n        moving_div.style.height = item.querySelector('li:nth-child(' + j + ')').offsetHeight;\n      } else {\n        for (var j = 1; j <= nodes.indexOf(li); j++) {\n          sum += item.querySelector('li:nth-child(' + j + ')').offsetWidth;\n        }\n        moving_div.style.transform = 'translate3d(' + sum + 'px, 0px, 0px)';\n        moving_div.style.width = item.querySelector('li:nth-child(' + index + ')').offsetWidth + 'px';\n      }\n    }\n  });\n  if (window.innerWidth < 991) {\n    total.forEach(function (item, i) {\n      if (!item.classList.contains('flex-column')) {\n        item.classList.remove('flex-row');\n        item.classList.add('flex-column', 'on-resize');\n        var li = item.querySelector(\".nav-link.active\").parentElement;\n        var nodes = Array.from(li.closest('ul').children); // get array\n        var index = nodes.indexOf(li) + 1;\n        var sum = 0;\n        for (var j = 1; j <= nodes.indexOf(li); j++) {\n          sum += item.querySelector('li:nth-child(' + j + ')').offsetHeight;\n        }\n        var moving_div = document.querySelector('.moving-tab');\n        moving_div.style.width = item.querySelector('li:nth-child(1)').offsetWidth + 'px';\n        moving_div.style.transform = 'translate3d(0px,' + sum + 'px, 0px)';\n      }\n    });\n  } else {\n    total.forEach(function (item, i) {\n      if (item.classList.contains('on-resize')) {\n        item.classList.remove('flex-column', 'on-resize');\n        item.classList.add('flex-row');\n        var li = item.querySelector(\".nav-link.active\").parentElement;\n        var nodes = Array.from(li.closest('ul').children); // get array\n        var index = nodes.indexOf(li) + 1;\n        var sum = 0;\n        for (var j = 1; j <= nodes.indexOf(li); j++) {\n          sum += item.querySelector('li:nth-child(' + j + ')').offsetWidth;\n        }\n        var moving_div = document.querySelector('.moving-tab');\n        moving_div.style.transform = 'translate3d(' + sum + 'px, 0px, 0px)';\n        moving_div.style.width = item.querySelector('li:nth-child(' + index + ')').offsetWidth + 'px';\n      }\n    });\n  }\n});\n\n// Function to remove flex row on mobile devices\nif (window.innerWidth < 991) {\n  total.forEach(function (item, i) {\n    if (item.classList.contains('flex-row')) {\n      item.classList.remove('flex-row');\n      item.classList.add('flex-column', 'on-resize');\n    }\n  });\n}\nfunction getEventTarget(e) {\n  e = e || window.event;\n  return e.target || e.srcElement;\n}\n\n// End tabs navigation\n\nwindow.onload = function () {\n  // Material Design Input function\n  var inputs = document.querySelectorAll('input');\n  for (var i = 0; i < inputs.length; i++) {\n    inputs[i].addEventListener('focus', function (e) {\n      this.parentElement.classList.add('is-focused');\n    }, false);\n    inputs[i].onkeyup = function (e) {\n      if (this.value != \"\") {\n        this.parentElement.classList.add('is-filled');\n      } else {\n        this.parentElement.classList.remove('is-filled');\n      }\n    };\n    inputs[i].addEventListener('focusout', function (e) {\n      if (this.value != \"\") {\n        this.parentElement.classList.add('is-filled');\n      }\n      this.parentElement.classList.remove('is-focused');\n    }, false);\n  }\n\n  // Ripple Effect\n  var ripples = document.querySelectorAll('.btn');\n  for (var i = 0; i < ripples.length; i++) {\n    ripples[i].addEventListener('click', function (e) {\n      var targetEl = e.target;\n      var rippleDiv = targetEl.querySelector('.ripple');\n      rippleDiv = document.createElement('span');\n      rippleDiv.classList.add('ripple');\n      rippleDiv.style.width = rippleDiv.style.height = Math.max(targetEl.offsetWidth, targetEl.offsetHeight) + 'px';\n      targetEl.appendChild(rippleDiv);\n      rippleDiv.style.left = e.offsetX - rippleDiv.offsetWidth / 2 + 'px';\n      rippleDiv.style.top = e.offsetY - rippleDiv.offsetHeight / 2 + 'px';\n      rippleDiv.classList.add('ripple');\n      setTimeout(function () {\n        rippleDiv.parentElement.removeChild(rippleDiv);\n      }, 600);\n    }, false);\n  }\n};\n\n// Toggle Sidenav\nvar iconNavbarSidenav = document.getElementById('iconNavbarSidenav');\nvar iconSidenav = document.getElementById('iconSidenav');\nvar sidenav = document.getElementById('sidenav-main');\nvar body = document.getElementsByTagName('body')[0];\nvar className = 'g-sidenav-pinned';\nif (iconNavbarSidenav) {\n  iconNavbarSidenav.addEventListener(\"click\", toggleSidenav);\n}\nif (iconSidenav) {\n  iconSidenav.addEventListener(\"click\", toggleSidenav);\n}\nfunction toggleSidenav() {\n  if (body.classList.contains(className)) {\n    body.classList.remove(className);\n    setTimeout(function () {\n      sidenav.classList.remove('bg-white');\n    }, 100);\n    sidenav.classList.remove('bg-transparent');\n  } else {\n    body.classList.add(className);\n    sidenav.classList.add('bg-white');\n    sidenav.classList.remove('bg-transparent');\n    iconSidenav.classList.remove('d-none');\n  }\n}\n\n// Resize navbar color depends on configurator active type of sidenav\n\nvar referenceButtons = document.querySelector('[data-class]');\nwindow.addEventListener(\"resize\", navbarColorOnResize);\nfunction navbarColorOnResize() {\n  if (window.innerWidth > 1200) {\n    if (referenceButtons.classList.contains('active') && referenceButtons.getAttribute('data-class') === 'bg-transparent') {\n      sidenav.classList.remove('bg-white');\n    } else {\n      sidenav.classList.add('bg-white');\n    }\n  } else {\n    sidenav.classList.add('bg-white');\n    sidenav.classList.remove('bg-transparent');\n  }\n}\n\n// Deactivate sidenav type buttons on resize and small screens\nwindow.addEventListener(\"resize\", sidenavTypeOnResize);\nwindow.addEventListener(\"load\", sidenavTypeOnResize);\nfunction sidenavTypeOnResize() {\n  var elements = document.querySelectorAll('[onclick=\"sidebarType(this)\"]');\n  if (window.innerWidth < 1200) {\n    elements.forEach(function (el) {\n      el.classList.add('disabled');\n    });\n  } else {\n    elements.forEach(function (el) {\n      el.classList.remove('disabled');\n    });\n  }\n}\n\n// Light Mode / Dark Mode\nfunction darkMode(el) {\n  var body = document.getElementsByTagName('body')[0];\n  var hr = document.querySelectorAll('div:not(.sidenav) > hr');\n  var hr_card = document.querySelectorAll('div:not(.bg-gradient-dark) hr');\n  var text_btn = document.querySelectorAll('button:not(.btn) > .text-dark');\n  var text_span = document.querySelectorAll('span.text-dark, .breadcrumb .text-dark');\n  var text_span_white = document.querySelectorAll('span.text-white, .breadcrumb .text-white');\n  var text_strong = document.querySelectorAll('strong.text-dark');\n  var text_strong_white = document.querySelectorAll('strong.text-white');\n  var text_nav_link = document.querySelectorAll('a.nav-link.text-dark');\n  var text_nav_link_white = document.querySelectorAll('a.nav-link.text-white');\n  var secondary = document.querySelectorAll('.text-secondary');\n  var bg_gray_100 = document.querySelectorAll('.bg-gray-100');\n  var bg_gray_600 = document.querySelectorAll('.bg-gray-600');\n  var btn_text_dark = document.querySelectorAll('.btn.btn-link.text-dark, .material-icons.text-dark');\n  var btn_text_white = document.querySelectorAll('.btn.btn-link.text-white, .material-icons.text-white');\n  var card_border = document.querySelectorAll('.card.border');\n  var card_border_dark = document.querySelectorAll('.card.border.border-dark');\n  var svg = document.querySelectorAll('g');\n  if (!el.getAttribute(\"checked\")) {\n    body.classList.add('dark-version');\n    for (var i = 0; i < hr.length; i++) {\n      if (hr[i].classList.contains('dark')) {\n        hr[i].classList.remove('dark');\n        hr[i].classList.add('light');\n      }\n    }\n    for (var i = 0; i < hr_card.length; i++) {\n      if (hr_card[i].classList.contains('dark')) {\n        hr_card[i].classList.remove('dark');\n        hr_card[i].classList.add('light');\n      }\n    }\n    for (var i = 0; i < text_btn.length; i++) {\n      if (text_btn[i].classList.contains('text-dark')) {\n        text_btn[i].classList.remove('text-dark');\n        text_btn[i].classList.add('text-white');\n      }\n    }\n    for (var i = 0; i < text_span.length; i++) {\n      if (text_span[i].classList.contains('text-dark')) {\n        text_span[i].classList.remove('text-dark');\n        text_span[i].classList.add('text-white');\n      }\n    }\n    for (var i = 0; i < text_strong.length; i++) {\n      if (text_strong[i].classList.contains('text-dark')) {\n        text_strong[i].classList.remove('text-dark');\n        text_strong[i].classList.add('text-white');\n      }\n    }\n    for (var i = 0; i < text_nav_link.length; i++) {\n      if (text_nav_link[i].classList.contains('text-dark')) {\n        text_nav_link[i].classList.remove('text-dark');\n        text_nav_link[i].classList.add('text-white');\n      }\n    }\n    for (var i = 0; i < secondary.length; i++) {\n      if (secondary[i].classList.contains('text-secondary')) {\n        secondary[i].classList.remove('text-secondary');\n        secondary[i].classList.add('text-white');\n        secondary[i].classList.add('opacity-8');\n      }\n    }\n    for (var i = 0; i < bg_gray_100.length; i++) {\n      if (bg_gray_100[i].classList.contains('bg-gray-100')) {\n        bg_gray_100[i].classList.remove('bg-gray-100');\n        bg_gray_100[i].classList.add('bg-gray-600');\n      }\n    }\n    for (var i = 0; i < btn_text_dark.length; i++) {\n      btn_text_dark[i].classList.remove('text-dark');\n      btn_text_dark[i].classList.add('text-white');\n    }\n    for (var i = 0; i < svg.length; i++) {\n      if (svg[i].hasAttribute('fill')) {\n        svg[i].setAttribute('fill', '#fff');\n      }\n    }\n    for (var i = 0; i < card_border.length; i++) {\n      card_border[i].classList.add('border-dark');\n    }\n    el.setAttribute(\"checked\", \"true\");\n  } else {\n    body.classList.remove('dark-version');\n    for (var i = 0; i < hr.length; i++) {\n      if (hr[i].classList.contains('light')) {\n        hr[i].classList.add('dark');\n        hr[i].classList.remove('light');\n      }\n    }\n    for (var i = 0; i < hr_card.length; i++) {\n      if (hr_card[i].classList.contains('light')) {\n        hr_card[i].classList.add('dark');\n        hr_card[i].classList.remove('light');\n      }\n    }\n    for (var i = 0; i < text_btn.length; i++) {\n      if (text_btn[i].classList.contains('text-white')) {\n        text_btn[i].classList.remove('text-white');\n        text_btn[i].classList.add('text-dark');\n      }\n    }\n    for (var i = 0; i < text_span_white.length; i++) {\n      if (text_span_white[i].classList.contains('text-white') && !text_span_white[i].closest('.sidenav') && !text_span_white[i].closest('.card.bg-gradient-dark')) {\n        text_span_white[i].classList.remove('text-white');\n        text_span_white[i].classList.add('text-dark');\n      }\n    }\n    for (var i = 0; i < text_strong_white.length; i++) {\n      if (text_strong_white[i].classList.contains('text-white')) {\n        text_strong_white[i].classList.remove('text-white');\n        text_strong_white[i].classList.add('text-dark');\n      }\n    }\n    for (var i = 0; i < text_nav_link_white.length; i++) {\n      if (text_nav_link_white[i].classList.contains('text-white') && !text_nav_link_white[i].closest('.sidenav')) {\n        text_nav_link_white[i].classList.remove('text-white');\n        text_nav_link_white[i].classList.add('text-dark');\n      }\n    }\n    for (var i = 0; i < secondary.length; i++) {\n      if (secondary[i].classList.contains('text-white')) {\n        secondary[i].classList.remove('text-white');\n        secondary[i].classList.remove('opacity-8');\n        secondary[i].classList.add('text-dark');\n      }\n    }\n    for (var i = 0; i < bg_gray_600.length; i++) {\n      if (bg_gray_600[i].classList.contains('bg-gray-600')) {\n        bg_gray_600[i].classList.remove('bg-gray-600');\n        bg_gray_600[i].classList.add('bg-gray-100');\n      }\n    }\n    for (var i = 0; i < svg.length; i++) {\n      if (svg[i].hasAttribute('fill')) {\n        svg[i].setAttribute('fill', '#252f40');\n      }\n    }\n    for (var i = 0; i < btn_text_white.length; i++) {\n      if (!btn_text_white[i].closest('.card.bg-gradient-dark')) {\n        btn_text_white[i].classList.remove('text-white');\n        btn_text_white[i].classList.add('text-dark');\n      }\n    }\n    for (var i = 0; i < card_border_dark.length; i++) {\n      card_border_dark[i].classList.remove('border-dark');\n    }\n    el.removeAttribute(\"checked\");\n  }\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/material-dashboard.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/material-dashboard.js"]();
/******/ 	
/******/ })()
;